openapi: 3.0.0
info:
  title: Wanderlust Travel API
  version: 1.0.0
  description: RESTful API for hotel browsing, booking, and review features.
servers:
  - url: http://localhost:3000

paths:
  /auth/register:
    post:
      summary: Register user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [user, admin]
      responses:
        '201':
          description: User registered
        '409':
          description: Username already taken

  /auth/login:
    post:
      summary: Login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Logged in with token
        '401':
          description: Invalid credentials

  /hotels:
    get:
      summary: List all hotels (public)
      tags: [Hotels]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: minStars
          schema:
            type: integer
      responses:
        '200':
          description: Hotel list with pagination
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                  totalPages:
                    type: integer
                  totalItems:
                    type: integer
                  hotels:
                    type: array
                    items:
                      $ref: '#/components/schemas/Hotel'

    post:
      summary: Add a new hotel (admin)
      tags: [Hotels]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '201':
          description: Hotel created

  /hotels/popular:
    get:
      summary: Get most reviewed hotels
      tags: [Hotels]
      responses:
        '200':
          description: Popular hotels
          content:
            application/json:
              schema:
                type: object
              properties:
                total:
                  type: integer
                hotels:
                  type: array
              items:
                type: object
                properties:
                  hotelId:
                    type: string
                  name:
                    type: string
                  location:
                    type: string
                  type:
                    type: string
                  starRating:
                    type: integer
                  imageUrl:
                    type: string
                  reviewCount:
                    type: integer
                  avgRating:
                    type: number


  /reviews:
    post:
      summary: Add a review (user only)
      tags: [Reviews]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: Review submitted

  /reviews/me/reviews:
    get:
      summary: Get current user's reviews
      tags: [Reviews]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user's reviews
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'


  /reviews/{id}:
    put:
      summary: Update own review
      tags: [Reviews]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
                comment:
                  type: string
      responses:
        '200':
          description: Review updated

    delete:
      summary: Delete own review
      tags: [Reviews]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Review deleted

  /admin/review-stats:
    get:
      summary: Admin get review stats
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Review statistics
          content:
            application/json:
          schema:
            type: object
            properties:
              stats:
                type: array
                items:
                  type: object
                  properties:
                    hotelId:
                      type: string
                    hotelName:
                      type: string
                    count:
                      type: integer
                    avgRating:
                      type: number


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Hotel:
      type: object
      required: [name, location, pricePerNight]
      properties:
        name:
          type: string
        location:
          type: string
        pricePerNight:
          type: number
        type:
          type: string
        starRating:
          type: integer
        amenities:
          type: array
          items:
            type: string
        imageUrl:
          type: string

    Review:
      type: object
      required: [hotelId, rating, comment]
      properties:
        hotelId:
          type: string
        rating:
          type: number
        comment:
          type: string